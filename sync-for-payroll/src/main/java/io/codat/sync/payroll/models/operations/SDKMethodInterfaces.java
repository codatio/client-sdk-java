/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package io.codat.sync.payroll.models.operations;

import io.codat.sync.payroll.utils.Options;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class SDKMethodInterfaces {

    public interface MethodCallCreateCompany {
        io.codat.sync.payroll.models.operations.CreateCompanyResponse create(
            Optional<? extends io.codat.sync.payroll.models.components.CompanyRequestBody> request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDeleteCompany {
        io.codat.sync.payroll.models.operations.DeleteCompanyResponse delete(
            io.codat.sync.payroll.models.operations.DeleteCompanyRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCompany {
        io.codat.sync.payroll.models.operations.GetCompanyResponse get(
            io.codat.sync.payroll.models.operations.GetCompanyRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCompanies {
        io.codat.sync.payroll.models.operations.ListCompaniesResponse list(
            io.codat.sync.payroll.models.operations.ListCompaniesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUpdateCompany {
        io.codat.sync.payroll.models.operations.UpdateCompanyResponse update(
            io.codat.sync.payroll.models.operations.UpdateCompanyRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateConnection {
        io.codat.sync.payroll.models.operations.CreateConnectionResponse create(
            io.codat.sync.payroll.models.operations.CreateConnectionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDeleteConnection {
        io.codat.sync.payroll.models.operations.DeleteConnectionResponse delete(
            io.codat.sync.payroll.models.operations.DeleteConnectionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetConnection {
        io.codat.sync.payroll.models.operations.GetConnectionResponse get(
            io.codat.sync.payroll.models.operations.GetConnectionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListConnections {
        io.codat.sync.payroll.models.operations.ListConnectionsResponse list(
            io.codat.sync.payroll.models.operations.ListConnectionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUnlinkConnection {
        io.codat.sync.payroll.models.operations.UnlinkConnectionResponse unlink(
            io.codat.sync.payroll.models.operations.UnlinkConnectionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateAccount {
        io.codat.sync.payroll.models.operations.CreateAccountResponse create(
            io.codat.sync.payroll.models.operations.CreateAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccount {
        io.codat.sync.payroll.models.operations.GetAccountResponse get(
            io.codat.sync.payroll.models.operations.GetAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateAccountsModel {
        io.codat.sync.payroll.models.operations.GetCreateAccountsModelResponse getCreateModel(
            io.codat.sync.payroll.models.operations.GetCreateAccountsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccounts {
        io.codat.sync.payroll.models.operations.ListAccountsResponse list(
            io.codat.sync.payroll.models.operations.ListAccountsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateJournalEntry {
        io.codat.sync.payroll.models.operations.CreateJournalEntryResponse create(
            io.codat.sync.payroll.models.operations.CreateJournalEntryRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDeleteJournalEntry {
        io.codat.sync.payroll.models.operations.DeleteJournalEntryResponse delete(
            io.codat.sync.payroll.models.operations.DeleteJournalEntryRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetJournalEntry {
        io.codat.sync.payroll.models.operations.GetJournalEntryResponse get(
            io.codat.sync.payroll.models.operations.GetJournalEntryRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateJournalEntryModel {
        io.codat.sync.payroll.models.operations.GetCreateJournalEntryModelResponse getCreateModel(
            io.codat.sync.payroll.models.operations.GetCreateJournalEntryModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListJournalEntries {
        io.codat.sync.payroll.models.operations.ListJournalEntriesResponse list(
            io.codat.sync.payroll.models.operations.ListJournalEntriesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateJournal {
        io.codat.sync.payroll.models.operations.CreateJournalResponse create(
            io.codat.sync.payroll.models.operations.CreateJournalRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetJournal {
        io.codat.sync.payroll.models.operations.GetJournalResponse get(
            io.codat.sync.payroll.models.operations.GetJournalRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateJournalModel {
        io.codat.sync.payroll.models.operations.GetCreateJournalModelResponse getCreateModel(
            io.codat.sync.payroll.models.operations.GetCreateJournalModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListJournals {
        io.codat.sync.payroll.models.operations.ListJournalsResponse list(
            io.codat.sync.payroll.models.operations.ListJournalsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetDataStatus {
        io.codat.sync.payroll.models.operations.GetDataStatusResponse getDataStatus(
            io.codat.sync.payroll.models.operations.GetDataStatusRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetPullOperation {
        io.codat.sync.payroll.models.operations.GetPullOperationResponse getPullOperation(
            io.codat.sync.payroll.models.operations.GetPullOperationRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetPushOperation {
        io.codat.sync.payroll.models.operations.GetPushOperationResponse getPushOperation(
            io.codat.sync.payroll.models.operations.GetPushOperationRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListPushOperations {
        io.codat.sync.payroll.models.operations.ListPushOperationsResponse list(
            io.codat.sync.payroll.models.operations.ListPushOperationsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListPullOperations {
        io.codat.sync.payroll.models.operations.ListPullOperationsResponse listPullOperations(
            io.codat.sync.payroll.models.operations.ListPullOperationsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallRefreshAllDataTypes {
        io.codat.sync.payroll.models.operations.RefreshAllDataTypesResponse refreshAllDataTypes(
            io.codat.sync.payroll.models.operations.RefreshAllDataTypesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallRefreshDataType {
        io.codat.sync.payroll.models.operations.RefreshDataTypeResponse refreshDataType(
            io.codat.sync.payroll.models.operations.RefreshDataTypeRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingProfile {
        io.codat.sync.payroll.models.operations.GetAccountingProfileResponse getAccountingProfile(
            io.codat.sync.payroll.models.operations.GetAccountingProfileRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetTrackingCategory {
        io.codat.sync.payroll.models.operations.GetTrackingCategoryResponse get(
            io.codat.sync.payroll.models.operations.GetTrackingCategoryRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListTrackingCategories {
        io.codat.sync.payroll.models.operations.ListTrackingCategoriesResponse list(
            io.codat.sync.payroll.models.operations.ListTrackingCategoriesRequest request,
            Optional<Options> options) throws Exception;
    }

}