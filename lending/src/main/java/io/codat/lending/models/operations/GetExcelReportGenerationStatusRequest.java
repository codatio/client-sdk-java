/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package io.codat.lending.models.operations;

import io.codat.lending.utils.SpeakeasyMetadata;
import io.codat.lending.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;


public class GetExcelReportGenerationStatusRequest {

    /**
     * Unique identifier for a company.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=companyId")
    private String companyId;

    /**
     * The type of report you want to generate and download.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=reportType")
    private io.codat.lending.models.shared.ExcelReportTypes reportType;

    public GetExcelReportGenerationStatusRequest(
            String companyId,
            io.codat.lending.models.shared.ExcelReportTypes reportType) {
        Utils.checkNotNull(companyId, "companyId");
        Utils.checkNotNull(reportType, "reportType");
        this.companyId = companyId;
        this.reportType = reportType;
    }

    /**
     * Unique identifier for a company.
     */
    public String companyId() {
        return companyId;
    }

    /**
     * The type of report you want to generate and download.
     */
    public io.codat.lending.models.shared.ExcelReportTypes reportType() {
        return reportType;
    }
    
    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Unique identifier for a company.
     */
    public GetExcelReportGenerationStatusRequest withCompanyId(String companyId) {
        Utils.checkNotNull(companyId, "companyId");
        this.companyId = companyId;
        return this;
    }

    /**
     * The type of report you want to generate and download.
     */
    public GetExcelReportGenerationStatusRequest withReportType(io.codat.lending.models.shared.ExcelReportTypes reportType) {
        Utils.checkNotNull(reportType, "reportType");
        this.reportType = reportType;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetExcelReportGenerationStatusRequest other = (GetExcelReportGenerationStatusRequest) o;
        return 
            java.util.Objects.deepEquals(this.companyId, other.companyId) &&
            java.util.Objects.deepEquals(this.reportType, other.reportType);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            companyId,
            reportType);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetExcelReportGenerationStatusRequest.class,
                "companyId", companyId,
                "reportType", reportType);
    }
    
    public final static class Builder {
 
        private String companyId;
 
        private io.codat.lending.models.shared.ExcelReportTypes reportType;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Unique identifier for a company.
         */
        public Builder companyId(String companyId) {
            Utils.checkNotNull(companyId, "companyId");
            this.companyId = companyId;
            return this;
        }

        /**
         * The type of report you want to generate and download.
         */
        public Builder reportType(io.codat.lending.models.shared.ExcelReportTypes reportType) {
            Utils.checkNotNull(reportType, "reportType");
            this.reportType = reportType;
            return this;
        }
        
        public GetExcelReportGenerationStatusRequest build() {
            return new GetExcelReportGenerationStatusRequest(
                companyId,
                reportType);
        }
    }
}

