/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package io.codat.lending.models.operations;

import io.codat.lending.models.shared.CompanyRequestBody;
import io.codat.lending.utils.Options;
import java.lang.Exception;
import java.util.Optional;

public class SDKMethodInterfaces {


    public interface MethodCallCreateCompany {
        CreateCompanyResponse create(
            Optional<? extends CompanyRequestBody> request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDeleteCompany {
        DeleteCompanyResponse delete(
            DeleteCompanyRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCompany {
        GetCompanyResponse get(
            GetCompanyRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCompanies {
        ListCompaniesResponse list(
            ListCompaniesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUpdateCompany {
        UpdateCompanyResponse update(
            UpdateCompanyRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateConnection {
        CreateConnectionResponse create(
            CreateConnectionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDeleteConnection {
        DeleteConnectionResponse delete(
            DeleteConnectionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetConnection {
        GetConnectionResponse get(
            GetConnectionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListConnections {
        ListConnectionsResponse list(
            ListConnectionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUnlinkConnection {
        UnlinkConnectionResponse unlink(
            UnlinkConnectionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateSourceAccount {
        CreateSourceAccountResponse create(
            CreateSourceAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateBankAccountMapping {
        CreateBankAccountMappingResponse createMapping(
            CreateBankAccountMappingRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetBankAccountMapping {
        GetBankAccountMappingResponse listMappings(
            GetBankAccountMappingRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateBankAccount {
        CreateBankAccountResponse create(
            CreateBankAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateUpdateBankAccountsModel {
        GetCreateUpdateBankAccountsModelResponse getCreateUpdateModel(
            GetCreateUpdateBankAccountsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateBankTransactions {
        CreateBankTransactionsResponse create(
            CreateBankTransactionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateBankTransactionsModel {
        GetCreateBankTransactionsModelResponse getCreateModel(
            GetCreateBankTransactionsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateAccount {
        CreateAccountResponse create(
            CreateAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateChartOfAccountsModel {
        GetCreateChartOfAccountsModelResponse getCreateModel(
            GetCreateChartOfAccountsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateDirectCost {
        CreateDirectCostResponse create(
            CreateDirectCostRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateDirectCostsModel {
        GetCreateDirectCostsModelResponse getCreateModel(
            GetCreateDirectCostsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreatePayment {
        CreatePaymentResponse create(
            CreatePaymentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreatePaymentModel {
        GetCreatePaymentModelResponse getCreateModel(
            GetCreatePaymentModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateSupplier {
        CreateSupplierResponse create(
            CreateSupplierRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateUpdateSuppliersModel {
        GetCreateUpdateSuppliersModelResponse getCreateUpdateModel(
            GetCreateUpdateSuppliersModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateTransfer {
        CreateTransferResponse create(
            CreateTransferRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateTransfersModel {
        GetCreateTransfersModelResponse getCreateModel(
            GetCreateTransfersModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateOperation {
        GetCreateOperationResponse get(
            GetCreateOperationRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCreateOperations {
        ListCreateOperationsResponse list(
            ListCreateOperationsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallEndBankStatementUploadSession {
        EndBankStatementUploadSessionResponse endUploadSession(
            EndBankStatementUploadSessionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetBankStatementUploadConfiguration {
        GetBankStatementUploadConfigurationResponse getUploadConfiguration(
            GetBankStatementUploadConfigurationRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallSetBankStatementUploadConfiguration {
        SetBankStatementUploadConfigurationResponse setUploadConfiguration(
            SetBankStatementUploadConfigurationRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallStartBankStatementUploadSession {
        StartBankStatementUploadSessionResponse startUploadSession(
            StartBankStatementUploadSessionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUploadBankStatementData {
        UploadBankStatementDataResponse uploadBankStatementData(
            UploadBankStatementDataRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingAccountTransaction {
        GetAccountingAccountTransactionResponse get(
            GetAccountingAccountTransactionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingAccountTransactions {
        ListAccountingAccountTransactionsResponse list(
            ListAccountingAccountTransactionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadAccountingDirectCostAttachment {
        DownloadAccountingDirectCostAttachmentResponse downloadAttachment(
            DownloadAccountingDirectCostAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingDirectCost {
        GetAccountingDirectCostResponse get(
            GetAccountingDirectCostRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingDirectCostAttachment {
        GetAccountingDirectCostAttachmentResponse getAttachment(
            GetAccountingDirectCostAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingDirectCosts {
        ListAccountingDirectCostsResponse list(
            ListAccountingDirectCostsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingDirectCostAttachments {
        ListAccountingDirectCostAttachmentsResponse listAttachments(
            ListAccountingDirectCostAttachmentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingTransfer {
        GetAccountingTransferResponse get(
            GetAccountingTransferRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingTransfers {
        ListAccountingTransfersResponse list(
            ListAccountingTransfersRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingJournalEntry {
        GetAccountingJournalEntryResponse get(
            GetAccountingJournalEntryRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingJournalEntries {
        ListAccountingJournalEntriesResponse list(
            ListAccountingJournalEntriesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingJournal {
        GetAccountingJournalResponse get(
            GetAccountingJournalRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingJournals {
        ListAccountingJournalsResponse list(
            ListAccountingJournalsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingBankAccountTransactions {
        ListAccountingBankAccountTransactionsResponse listTransactions(
            ListAccountingBankAccountTransactionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingBankAccount {
        GetAccountingBankAccountResponse get(
            GetAccountingBankAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingBankAccounts {
        ListAccountingBankAccountsResponse list(
            ListAccountingBankAccountsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListBankingAccountBalances {
        ListBankingAccountBalancesResponse list(
            ListBankingAccountBalancesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetBankingAccount {
        GetBankingAccountResponse get(
            GetBankingAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListBankingAccounts {
        ListBankingAccountsResponse list(
            ListBankingAccountsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetBankingTransactionCategory {
        GetBankingTransactionCategoryResponse get(
            GetBankingTransactionCategoryRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListBankingTransactionCategories {
        ListBankingTransactionCategoriesResponse list(
            ListBankingTransactionCategoriesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetBankingTransaction {
        GetBankingTransactionResponse get(
            GetBankingTransactionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListBankingTransactions {
        ListBankingTransactionsResponse list(
            ListBankingTransactionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCategorizedBankStatement {
        GetCategorizedBankStatementResponse get(
            GetCategorizedBankStatementRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadAccountingBillAttachment {
        DownloadAccountingBillAttachmentResponse downloadAttachment(
            DownloadAccountingBillAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingBill {
        GetAccountingBillResponse get(
            GetAccountingBillRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingBillAttachment {
        GetAccountingBillAttachmentResponse getAttachment(
            GetAccountingBillAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingBills {
        ListAccountingBillsResponse list(
            ListAccountingBillsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingBillAttachments {
        ListAccountingBillAttachmentsResponse listAttachments(
            ListAccountingBillAttachmentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadAccountingSupplierAttachment {
        DownloadAccountingSupplierAttachmentResponse downloadAttachment(
            DownloadAccountingSupplierAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingSupplier {
        GetAccountingSupplierResponse get(
            GetAccountingSupplierRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingSupplierAttachment {
        GetAccountingSupplierAttachmentResponse getAttachment(
            GetAccountingSupplierAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingSuppliers {
        ListAccountingSuppliersResponse list(
            ListAccountingSuppliersRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingSupplierAttachments {
        ListAccountingSupplierAttachmentsResponse listAttachments(
            ListAccountingSupplierAttachmentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingBillCreditNote {
        GetAccountingBillCreditNoteResponse get(
            GetAccountingBillCreditNoteRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingBillCreditNotes {
        ListAccountingBillCreditNotesResponse list(
            ListAccountingBillCreditNotesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingBillPayment {
        GetAccountingBillPaymentResponse get(
            GetAccountingBillPaymentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingBillPayments {
        ListAccountingBillPaymentsResponse list(
            ListAccountingBillPaymentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommerceCustomer {
        GetCommerceCustomerResponse get(
            GetCommerceCustomerRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCommerceCustomers {
        ListCommerceCustomersResponse list(
            ListCommerceCustomersRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommerceDispute {
        GetCommerceDisputeResponse get(
            GetCommerceDisputeRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCommerceDisputes {
        ListCommerceDisputesResponse list(
            ListCommerceDisputesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommerceLocation {
        GetCommerceLocationResponse get(
            GetCommerceLocationRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCommerceLocations {
        ListCommerceLocationsResponse list(
            ListCommerceLocationsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommerceOrder {
        GetCommerceOrderResponse get(
            GetCommerceOrderRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCommerceOrders {
        ListCommerceOrdersResponse list(
            ListCommerceOrdersRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommercePaymentMethod {
        GetCommercePaymentMethodResponse get(
            GetCommercePaymentMethodRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCommercePaymentMethods {
        ListCommercePaymentMethodsResponse list(
            ListCommercePaymentMethodsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommercePayment {
        GetCommercePaymentResponse get(
            GetCommercePaymentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCommercePayments {
        ListCommercePaymentsResponse list(
            ListCommercePaymentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommerceProductCategory {
        GetCommerceProductCategoryResponse get(
            GetCommerceProductCategoryRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCommerceProductCategories {
        ListCommerceProductCategoriesResponse list(
            ListCommerceProductCategoriesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommerceProduct {
        GetCommerceProductResponse get(
            GetCommerceProductRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCommerceProducts {
        ListCommerceProductsResponse list(
            ListCommerceProductsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommerceTransaction {
        GetCommerceTransactionResponse get(
            GetCommerceTransactionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCommerceTransactions {
        ListCommerceTransactionsResponse list(
            ListCommerceTransactionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommerceCustomerRetentionMetrics {
        GetCommerceCustomerRetentionMetricsResponse getCustomerRetention(
            GetCommerceCustomerRetentionMetricsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommerceLifetimeValueMetrics {
        GetCommerceLifetimeValueMetricsResponse getLifetimeValue(
            GetCommerceLifetimeValueMetricsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommerceRevenueMetrics {
        GetCommerceRevenueMetricsResponse getRevenue(
            GetCommerceRevenueMetricsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommerceOrdersReport {
        GetCommerceOrdersReportResponse getOrders(
            GetCommerceOrdersReportRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommerceRefundsReport {
        GetCommerceRefundsReportResponse getRefunds(
            GetCommerceRefundsReportRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingProfile {
        GetAccountingProfileResponse getAccountingProfile(
            GetAccountingProfileRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCommerceProfile {
        GetCommerceProfileResponse getCommerceProfile(
            GetCommerceProfileRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadAccountingCustomerAttachment {
        DownloadAccountingCustomerAttachmentResponse downloadAttachment(
            DownloadAccountingCustomerAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingCustomer {
        GetAccountingCustomerResponse get(
            GetAccountingCustomerRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingCustomerAttachment {
        GetAccountingCustomerAttachmentResponse getAttachment(
            GetAccountingCustomerAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingCustomers {
        ListAccountingCustomersResponse list(
            ListAccountingCustomersRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingCustomerAttachments {
        ListAccountingCustomerAttachmentsResponse listAttachments(
            ListAccountingCustomerAttachmentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadAccountingDirectIncomeAttachment {
        DownloadAccountingDirectIncomeAttachmentResponse downloadAttachment(
            DownloadAccountingDirectIncomeAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingDirectIncome {
        GetAccountingDirectIncomeResponse get(
            GetAccountingDirectIncomeRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingDirectIncomeAttachment {
        GetAccountingDirectIncomeAttachmentResponse getAttachment(
            GetAccountingDirectIncomeAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingDirectIncomes {
        ListAccountingDirectIncomesResponse list(
            ListAccountingDirectIncomesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingDirectIncomeAttachments {
        ListAccountingDirectIncomeAttachmentsResponse listAttachments(
            ListAccountingDirectIncomeAttachmentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadAccountingInvoiceAttachment {
        DownloadAccountingInvoiceAttachmentResponse downloadAttachment(
            DownloadAccountingInvoiceAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadAccountingInvoicePdf {
        DownloadAccountingInvoicePdfResponse downloadPdf(
            DownloadAccountingInvoicePdfRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingInvoice {
        GetAccountingInvoiceResponse get(
            GetAccountingInvoiceRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingInvoiceAttachment {
        GetAccountingInvoiceAttachmentResponse getAttachment(
            GetAccountingInvoiceAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingInvoices {
        ListAccountingInvoicesResponse list(
            ListAccountingInvoicesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingInvoiceAttachments {
        ListAccountingInvoiceAttachmentsResponse listAttachments(
            ListAccountingInvoiceAttachmentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListReconciledInvoices {
        ListReconciledInvoicesResponse listReconciled(
            ListReconciledInvoicesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingCreditNote {
        GetAccountingCreditNoteResponse get(
            GetAccountingCreditNoteRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingCreditNotes {
        ListAccountingCreditNotesResponse list(
            ListAccountingCreditNotesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingPayment {
        GetAccountingPaymentResponse get(
            GetAccountingPaymentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingPayments {
        ListAccountingPaymentsResponse list(
            ListAccountingPaymentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingAgedCreditorsReport {
        GetAccountingAgedCreditorsReportResponse getAgedCreditors(
            GetAccountingAgedCreditorsReportRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingAgedDebtorsReport {
        GetAccountingAgedDebtorsReportResponse getAgedDebtors(
            GetAccountingAgedDebtorsReportRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallIsAgedCreditorsReportAvailable {
        IsAgedCreditorsReportAvailableResponse isAgedCreditorsAvailable(
            IsAgedCreditorsReportAvailableRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallIsAgedDebtorsReportAvailable {
        IsAgedDebtorsReportAvailableResponse isAgedDebtorsAvailable(
            IsAgedDebtorsReportAvailableRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadFiles {
        DownloadFilesResponse download(
            DownloadFilesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListFiles {
        ListFilesResponse listUploaded(
            ListFilesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUploadFiles {
        UploadFilesResponse upload(
            UploadFilesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingAccount {
        GetAccountingAccountResponse get(
            GetAccountingAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountingAccounts {
        ListAccountingAccountsResponse list(
            ListAccountingAccountsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingBalanceSheet {
        GetAccountingBalanceSheetResponse get(
            GetAccountingBalanceSheetRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCategorizedBalanceSheetStatement {
        GetCategorizedBalanceSheetStatementResponse getCategorizedAccounts(
            GetCategorizedBalanceSheetStatementRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingCashFlowStatement {
        GetAccountingCashFlowStatementResponse get(
            GetAccountingCashFlowStatementRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccountingProfitAndLoss {
        GetAccountingProfitAndLossResponse get(
            GetAccountingProfitAndLossRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCategorizedProfitAndLossStatement {
        GetCategorizedProfitAndLossStatementResponse getCategorizedAccounts(
            GetCategorizedProfitAndLossStatementRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetDataStatus {
        GetDataStatusResponse getStatus(
            GetDataStatusRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallRefreshAllDataTypes {
        RefreshAllDataTypesResponse allDataTypes(
            RefreshAllDataTypesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallRefreshDataType {
        RefreshDataTypeResponse dataType(
            RefreshDataTypeRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetPullOperation {
        GetPullOperationResponse get(
            GetPullOperationRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListPullOperations {
        ListPullOperationsResponse list(
            ListPullOperationsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGenerateReport {
        GenerateReportResponse generateReport(
            GenerateReportRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListReports {
        ListReportsResponse listReports(
            ListReportsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGenerateLoanSummary {
        GenerateLoanSummaryResponse generateLoanSummary(
            GenerateLoanSummaryRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGenerateLoanTransactions {
        GenerateLoanTransactionsResponse generateLoanTransactions(
            GenerateLoanTransactionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetLoanSummary {
        GetLoanSummaryResponse getLoanSummary(
            GetLoanSummaryRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListLoanTransactions {
        ListLoanTransactionsResponse listLoanTransactions(
            ListLoanTransactionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListDataIntegrityDetails {
        ListDataIntegrityDetailsResponse details(
            ListDataIntegrityDetailsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetDataIntegrityStatus {
        GetDataIntegrityStatusResponse status(
            GetDataIntegrityStatusRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetDataIntegritySummaries {
        GetDataIntegritySummariesResponse summaries(
            GetDataIntegritySummariesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadExcelReport {
        DownloadExcelReportResponse download(
            DownloadExcelReportRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGenerateExcelReport {
        GenerateExcelReportResponse generate(
            GenerateExcelReportRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetExcelReportGenerationStatus {
        GetExcelReportGenerationStatusResponse getStatus(
            GetExcelReportGenerationStatusRequest request,
            Optional<Options> options) throws Exception;
    }


}
