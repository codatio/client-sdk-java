/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package io.codat.lending.models.shared;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * DisputeStatus - Current status of the dispute
 */
public enum DisputeStatus {
    WON("Won"),
    LOST("Lost"),
    ACCEPTED("Accepted"),
    PROCESSING("Processing"),
    CHARGE_REFUNDED("ChargeRefunded"),
    EVIDENCE_REQUIRED("EvidenceRequired"),
    INQUIRY_EVIDENCE_REQUIRED("InquiryEvidenceRequired"),
    INQUIRY_PROCESSING("InquiryProcessing"),
    INQUIRY_CLOSED("InquiryClosed"),
    WAITING_THIRD_PARTY("WaitingThirdParty"),
    UNKNOWN("Unknown");

    @JsonValue
    private final String value;

    private DisputeStatus(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<DisputeStatus> fromValue(String value) {
        for (DisputeStatus o: DisputeStatus.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}
