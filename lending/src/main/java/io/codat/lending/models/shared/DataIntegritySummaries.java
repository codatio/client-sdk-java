/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package io.codat.lending.models.shared;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.codat.lending.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;


public class DataIntegritySummaries {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("summaries")
    private Optional<? extends List<DataIntegritySummary>> summaries;

    @JsonCreator
    public DataIntegritySummaries(
            @JsonProperty("summaries") Optional<? extends List<DataIntegritySummary>> summaries) {
        Utils.checkNotNull(summaries, "summaries");
        this.summaries = summaries;
    }
    
    public DataIntegritySummaries() {
        this(Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<DataIntegritySummary>> summaries() {
        return (Optional<List<DataIntegritySummary>>) summaries;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public DataIntegritySummaries withSummaries(List<DataIntegritySummary> summaries) {
        Utils.checkNotNull(summaries, "summaries");
        this.summaries = Optional.ofNullable(summaries);
        return this;
    }

    public DataIntegritySummaries withSummaries(Optional<? extends List<DataIntegritySummary>> summaries) {
        Utils.checkNotNull(summaries, "summaries");
        this.summaries = summaries;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DataIntegritySummaries other = (DataIntegritySummaries) o;
        return 
            Objects.deepEquals(this.summaries, other.summaries);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            summaries);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DataIntegritySummaries.class,
                "summaries", summaries);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<DataIntegritySummary>> summaries = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder summaries(List<DataIntegritySummary> summaries) {
            Utils.checkNotNull(summaries, "summaries");
            this.summaries = Optional.ofNullable(summaries);
            return this;
        }

        public Builder summaries(Optional<? extends List<DataIntegritySummary>> summaries) {
            Utils.checkNotNull(summaries, "summaries");
            this.summaries = summaries;
            return this;
        }
        
        public DataIntegritySummaries build() {
            return new DataIntegritySummaries(
                summaries);
        }
    }
}

