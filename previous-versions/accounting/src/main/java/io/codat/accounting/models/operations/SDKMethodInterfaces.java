/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package io.codat.accounting.models.operations;

import io.codat.accounting.utils.Options;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class SDKMethodInterfaces {

    public interface MethodCallGetAccountTransaction {
        io.codat.accounting.models.operations.GetAccountTransactionResponse get(
            io.codat.accounting.models.operations.GetAccountTransactionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccountTransactions {
        io.codat.accounting.models.operations.ListAccountTransactionsResponse list(
            io.codat.accounting.models.operations.ListAccountTransactionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateBankAccount {
        io.codat.accounting.models.operations.CreateBankAccountResponse create(
            io.codat.accounting.models.operations.CreateBankAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetBankAccount {
        io.codat.accounting.models.operations.GetBankAccountResponse get(
            io.codat.accounting.models.operations.GetBankAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateUpdateBankAccountsModel {
        io.codat.accounting.models.operations.GetCreateUpdateBankAccountsModelResponse getCreateUpdateModel(
            io.codat.accounting.models.operations.GetCreateUpdateBankAccountsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListBankAccounts {
        io.codat.accounting.models.operations.ListBankAccountsResponse list(
            io.codat.accounting.models.operations.ListBankAccountsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUpdateBankAccount {
        io.codat.accounting.models.operations.UpdateBankAccountResponse update(
            io.codat.accounting.models.operations.UpdateBankAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateBankTransactions {
        io.codat.accounting.models.operations.CreateBankTransactionsResponse create(
            io.codat.accounting.models.operations.CreateBankTransactionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateBankTransactionsModel {
        io.codat.accounting.models.operations.GetCreateBankTransactionsModelResponse getCreateModel(
            io.codat.accounting.models.operations.GetCreateBankTransactionsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListBankAccountTransactions {
        io.codat.accounting.models.operations.ListBankAccountTransactionsResponse list(
            io.codat.accounting.models.operations.ListBankAccountTransactionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateBill {
        io.codat.accounting.models.operations.CreateBillResponse create(
            io.codat.accounting.models.operations.CreateBillRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDeleteBill {
        io.codat.accounting.models.operations.DeleteBillResponse delete(
            io.codat.accounting.models.operations.DeleteBillRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadBillAttachment {
        io.codat.accounting.models.operations.DownloadBillAttachmentResponse downloadAttachment(
            io.codat.accounting.models.operations.DownloadBillAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetBill {
        io.codat.accounting.models.operations.GetBillResponse get(
            io.codat.accounting.models.operations.GetBillRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetBillAttachment {
        io.codat.accounting.models.operations.GetBillAttachmentResponse getAttachment(
            io.codat.accounting.models.operations.GetBillAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateUpdateBillsModel {
        io.codat.accounting.models.operations.GetCreateUpdateBillsModelResponse getCreateUpdateModel(
            io.codat.accounting.models.operations.GetCreateUpdateBillsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListBills {
        io.codat.accounting.models.operations.ListBillsResponse list(
            io.codat.accounting.models.operations.ListBillsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListBillAttachments {
        io.codat.accounting.models.operations.ListBillAttachmentsResponse listAttachments(
            io.codat.accounting.models.operations.ListBillAttachmentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUpdateBill {
        io.codat.accounting.models.operations.UpdateBillResponse update(
            io.codat.accounting.models.operations.UpdateBillRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUploadBillAttachment {
        io.codat.accounting.models.operations.UploadBillAttachmentResponse uploadAttachment(
            io.codat.accounting.models.operations.UploadBillAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateCustomer {
        io.codat.accounting.models.operations.CreateCustomerResponse create(
            io.codat.accounting.models.operations.CreateCustomerRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadCustomerAttachment {
        io.codat.accounting.models.operations.DownloadCustomerAttachmentResponse downloadAttachment(
            io.codat.accounting.models.operations.DownloadCustomerAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCustomer {
        io.codat.accounting.models.operations.GetCustomerResponse get(
            io.codat.accounting.models.operations.GetCustomerRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCustomerAttachment {
        io.codat.accounting.models.operations.GetCustomerAttachmentResponse getAttachment(
            io.codat.accounting.models.operations.GetCustomerAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateUpdateCustomersModel {
        io.codat.accounting.models.operations.GetCreateUpdateCustomersModelResponse getCreateUpdateModel(
            io.codat.accounting.models.operations.GetCreateUpdateCustomersModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCustomers {
        io.codat.accounting.models.operations.ListCustomersResponse list(
            io.codat.accounting.models.operations.ListCustomersRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCustomerAttachments {
        io.codat.accounting.models.operations.ListCustomerAttachmentsResponse listAttachments(
            io.codat.accounting.models.operations.ListCustomerAttachmentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUpdateCustomer {
        io.codat.accounting.models.operations.UpdateCustomerResponse update(
            io.codat.accounting.models.operations.UpdateCustomerRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateDirectCost {
        io.codat.accounting.models.operations.CreateDirectCostResponse create(
            io.codat.accounting.models.operations.CreateDirectCostRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDeleteDirectCost {
        io.codat.accounting.models.operations.DeleteDirectCostResponse delete(
            io.codat.accounting.models.operations.DeleteDirectCostRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadDirectCostAttachment {
        io.codat.accounting.models.operations.DownloadDirectCostAttachmentResponse downloadAttachment(
            io.codat.accounting.models.operations.DownloadDirectCostAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetDirectCost {
        io.codat.accounting.models.operations.GetDirectCostResponse get(
            io.codat.accounting.models.operations.GetDirectCostRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetDirectCostAttachment {
        io.codat.accounting.models.operations.GetDirectCostAttachmentResponse getAttachment(
            io.codat.accounting.models.operations.GetDirectCostAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateDirectCostsModel {
        io.codat.accounting.models.operations.GetCreateDirectCostsModelResponse getCreateModel(
            io.codat.accounting.models.operations.GetCreateDirectCostsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListDirectCosts {
        io.codat.accounting.models.operations.ListDirectCostsResponse list(
            io.codat.accounting.models.operations.ListDirectCostsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListDirectCostAttachments {
        io.codat.accounting.models.operations.ListDirectCostAttachmentsResponse listAttachments(
            io.codat.accounting.models.operations.ListDirectCostAttachmentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUploadDirectCostAttachment {
        io.codat.accounting.models.operations.UploadDirectCostAttachmentResponse uploadAttachment(
            io.codat.accounting.models.operations.UploadDirectCostAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateDirectIncome {
        io.codat.accounting.models.operations.CreateDirectIncomeResponse create(
            io.codat.accounting.models.operations.CreateDirectIncomeRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadDirectIncomeAttachment {
        io.codat.accounting.models.operations.DownloadDirectIncomeAttachmentResponse downloadAttachment(
            io.codat.accounting.models.operations.DownloadDirectIncomeAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetDirectIncome {
        io.codat.accounting.models.operations.GetDirectIncomeResponse get(
            io.codat.accounting.models.operations.GetDirectIncomeRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetDirectIncomeAttachment {
        io.codat.accounting.models.operations.GetDirectIncomeAttachmentResponse getAttachment(
            io.codat.accounting.models.operations.GetDirectIncomeAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateDirectIncomesModel {
        io.codat.accounting.models.operations.GetCreateDirectIncomesModelResponse getCreateModel(
            io.codat.accounting.models.operations.GetCreateDirectIncomesModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListDirectIncomes {
        io.codat.accounting.models.operations.ListDirectIncomesResponse list(
            io.codat.accounting.models.operations.ListDirectIncomesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListDirectIncomeAttachments {
        io.codat.accounting.models.operations.ListDirectIncomeAttachmentsResponse listAttachments(
            io.codat.accounting.models.operations.ListDirectIncomeAttachmentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUploadDirectIncomeAttachment {
        io.codat.accounting.models.operations.UploadDirectIncomeAttachmentResponse uploadAttachment(
            io.codat.accounting.models.operations.UploadDirectIncomeAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateInvoice {
        io.codat.accounting.models.operations.CreateInvoiceResponse create(
            io.codat.accounting.models.operations.CreateInvoiceRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDeleteInvoice {
        io.codat.accounting.models.operations.DeleteInvoiceResponse delete(
            io.codat.accounting.models.operations.DeleteInvoiceRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadInvoiceAttachment {
        io.codat.accounting.models.operations.DownloadInvoiceAttachmentResponse downloadAttachment(
            io.codat.accounting.models.operations.DownloadInvoiceAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadInvoicePdf {
        io.codat.accounting.models.operations.DownloadInvoicePdfResponse downloadPdf(
            io.codat.accounting.models.operations.DownloadInvoicePdfRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetInvoice {
        io.codat.accounting.models.operations.GetInvoiceResponse get(
            io.codat.accounting.models.operations.GetInvoiceRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetInvoiceAttachment {
        io.codat.accounting.models.operations.GetInvoiceAttachmentResponse getAttachment(
            io.codat.accounting.models.operations.GetInvoiceAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateUpdateInvoicesModel {
        io.codat.accounting.models.operations.GetCreateUpdateInvoicesModelResponse getCreateUpdateModel(
            io.codat.accounting.models.operations.GetCreateUpdateInvoicesModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListInvoices {
        io.codat.accounting.models.operations.ListInvoicesResponse list(
            io.codat.accounting.models.operations.ListInvoicesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListInvoiceAttachments {
        io.codat.accounting.models.operations.ListInvoiceAttachmentsResponse listAttachments(
            io.codat.accounting.models.operations.ListInvoiceAttachmentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUpdateInvoice {
        io.codat.accounting.models.operations.UpdateInvoiceResponse update(
            io.codat.accounting.models.operations.UpdateInvoiceRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUploadInvoiceAttachment {
        io.codat.accounting.models.operations.UploadInvoiceAttachmentResponse uploadAttachment(
            io.codat.accounting.models.operations.UploadInvoiceAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetItemReceipt {
        io.codat.accounting.models.operations.GetItemReceiptResponse get(
            io.codat.accounting.models.operations.GetItemReceiptRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListItemReceipts {
        io.codat.accounting.models.operations.ListItemReceiptsResponse list(
            io.codat.accounting.models.operations.ListItemReceiptsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreatePurchaseOrder {
        io.codat.accounting.models.operations.CreatePurchaseOrderResponse create(
            io.codat.accounting.models.operations.CreatePurchaseOrderRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadPurchaseOrderAttachment {
        io.codat.accounting.models.operations.DownloadPurchaseOrderAttachmentResponse downloadAttachment(
            io.codat.accounting.models.operations.DownloadPurchaseOrderAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadPurchaseOrderPdf {
        io.codat.accounting.models.operations.DownloadPurchaseOrderPdfResponse downloadPurchaseOrderPdf(
            io.codat.accounting.models.operations.DownloadPurchaseOrderPdfRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetPurchaseOrder {
        io.codat.accounting.models.operations.GetPurchaseOrderResponse get(
            io.codat.accounting.models.operations.GetPurchaseOrderRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetPurchaseOrderAttachment {
        io.codat.accounting.models.operations.GetPurchaseOrderAttachmentResponse getAttachment(
            io.codat.accounting.models.operations.GetPurchaseOrderAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateUpdatePurchaseOrdersModel {
        io.codat.accounting.models.operations.GetCreateUpdatePurchaseOrdersModelResponse getCreateUpdateModel(
            io.codat.accounting.models.operations.GetCreateUpdatePurchaseOrdersModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListPurchaseOrders {
        io.codat.accounting.models.operations.ListPurchaseOrdersResponse list(
            io.codat.accounting.models.operations.ListPurchaseOrdersRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListPurchaseOrderAttachments {
        io.codat.accounting.models.operations.ListPurchaseOrderAttachmentsResponse listAttachments(
            io.codat.accounting.models.operations.ListPurchaseOrderAttachmentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUpdatePurchaseOrder {
        io.codat.accounting.models.operations.UpdatePurchaseOrderResponse update(
            io.codat.accounting.models.operations.UpdatePurchaseOrderRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateSupplier {
        io.codat.accounting.models.operations.CreateSupplierResponse create(
            io.codat.accounting.models.operations.CreateSupplierRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDownloadSupplierAttachment {
        io.codat.accounting.models.operations.DownloadSupplierAttachmentResponse downloadAttachment(
            io.codat.accounting.models.operations.DownloadSupplierAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetSupplier {
        io.codat.accounting.models.operations.GetSupplierResponse get(
            io.codat.accounting.models.operations.GetSupplierRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetSupplierAttachment {
        io.codat.accounting.models.operations.GetSupplierAttachmentResponse getAttachment(
            io.codat.accounting.models.operations.GetSupplierAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateUpdateSuppliersModel {
        io.codat.accounting.models.operations.GetCreateUpdateSuppliersModelResponse getCreateUpdateModel(
            io.codat.accounting.models.operations.GetCreateUpdateSuppliersModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListSuppliers {
        io.codat.accounting.models.operations.ListSuppliersResponse list(
            io.codat.accounting.models.operations.ListSuppliersRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListSupplierAttachments {
        io.codat.accounting.models.operations.ListSupplierAttachmentsResponse listAttachments(
            io.codat.accounting.models.operations.ListSupplierAttachmentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUpdateSupplier {
        io.codat.accounting.models.operations.UpdateSupplierResponse update(
            io.codat.accounting.models.operations.UpdateSupplierRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateTransfer {
        io.codat.accounting.models.operations.CreateTransferResponse create(
            io.codat.accounting.models.operations.CreateTransferRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetTransfer {
        io.codat.accounting.models.operations.GetTransferResponse get(
            io.codat.accounting.models.operations.GetTransferRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateTransfersModel {
        io.codat.accounting.models.operations.GetCreateTransfersModelResponse getCreateModel(
            io.codat.accounting.models.operations.GetCreateTransfersModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListTransfers {
        io.codat.accounting.models.operations.ListTransfersResponse list(
            io.codat.accounting.models.operations.ListTransfersRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUploadTransferAttachment {
        io.codat.accounting.models.operations.UploadTransferAttachmentResponse uploadAttachment(
            io.codat.accounting.models.operations.UploadTransferAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateBillCreditNote {
        io.codat.accounting.models.operations.CreateBillCreditNoteResponse create(
            io.codat.accounting.models.operations.CreateBillCreditNoteRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetBillCreditNote {
        io.codat.accounting.models.operations.GetBillCreditNoteResponse get(
            io.codat.accounting.models.operations.GetBillCreditNoteRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateUpdateBillCreditNotesModel {
        io.codat.accounting.models.operations.GetCreateUpdateBillCreditNotesModelResponse getCreateUpdateModel(
            io.codat.accounting.models.operations.GetCreateUpdateBillCreditNotesModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListBillCreditNotes {
        io.codat.accounting.models.operations.ListBillCreditNotesResponse list(
            io.codat.accounting.models.operations.ListBillCreditNotesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUpdateBillCreditNote {
        io.codat.accounting.models.operations.UpdateBillCreditNoteResponse update(
            io.codat.accounting.models.operations.UpdateBillCreditNoteRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUploadBillCreditNoteAttachment {
        io.codat.accounting.models.operations.UploadBillCreditNoteAttachmentResponse uploadAttachment(
            io.codat.accounting.models.operations.UploadBillCreditNoteAttachmentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateBillPayment {
        io.codat.accounting.models.operations.CreateBillPaymentResponse create(
            io.codat.accounting.models.operations.CreateBillPaymentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDeleteBillPayment {
        io.codat.accounting.models.operations.DeleteBillPaymentResponse delete(
            io.codat.accounting.models.operations.DeleteBillPaymentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetBillPayments {
        io.codat.accounting.models.operations.GetBillPaymentsResponse get(
            io.codat.accounting.models.operations.GetBillPaymentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateBillPaymentsModel {
        io.codat.accounting.models.operations.GetCreateBillPaymentsModelResponse getCreateModel(
            io.codat.accounting.models.operations.GetCreateBillPaymentsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListBillPayments {
        io.codat.accounting.models.operations.ListBillPaymentsResponse list(
            io.codat.accounting.models.operations.ListBillPaymentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateAccount {
        io.codat.accounting.models.operations.CreateAccountResponse create(
            io.codat.accounting.models.operations.CreateAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAccount {
        io.codat.accounting.models.operations.GetAccountResponse get(
            io.codat.accounting.models.operations.GetAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateChartOfAccountsModel {
        io.codat.accounting.models.operations.GetCreateChartOfAccountsModelResponse getCreateModel(
            io.codat.accounting.models.operations.GetCreateChartOfAccountsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListAccounts {
        io.codat.accounting.models.operations.ListAccountsResponse list(
            io.codat.accounting.models.operations.ListAccountsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateCreditNote {
        io.codat.accounting.models.operations.CreateCreditNoteResponse create(
            io.codat.accounting.models.operations.CreateCreditNoteRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreditNote {
        io.codat.accounting.models.operations.GetCreditNoteResponse get(
            io.codat.accounting.models.operations.GetCreditNoteRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateUpdateCreditNotesModel {
        io.codat.accounting.models.operations.GetCreateUpdateCreditNotesModelResponse getCreateUpdateModel(
            io.codat.accounting.models.operations.GetCreateUpdateCreditNotesModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCreditNotes {
        io.codat.accounting.models.operations.ListCreditNotesResponse list(
            io.codat.accounting.models.operations.ListCreditNotesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUpdateCreditNote {
        io.codat.accounting.models.operations.UpdateCreditNoteResponse update(
            io.codat.accounting.models.operations.UpdateCreditNoteRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateItem {
        io.codat.accounting.models.operations.CreateItemResponse create(
            io.codat.accounting.models.operations.CreateItemRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetItem {
        io.codat.accounting.models.operations.GetItemResponse get(
            io.codat.accounting.models.operations.GetItemRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateItemsModel {
        io.codat.accounting.models.operations.GetCreateItemsModelResponse getCreateModel(
            io.codat.accounting.models.operations.GetCreateItemsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListItems {
        io.codat.accounting.models.operations.ListItemsResponse list(
            io.codat.accounting.models.operations.ListItemsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateJournalEntry {
        io.codat.accounting.models.operations.CreateJournalEntryResponse create(
            io.codat.accounting.models.operations.CreateJournalEntryRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDeleteJournalEntry {
        io.codat.accounting.models.operations.DeleteJournalEntryResponse delete(
            io.codat.accounting.models.operations.DeleteJournalEntryRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetJournalEntry {
        io.codat.accounting.models.operations.GetJournalEntryResponse get(
            io.codat.accounting.models.operations.GetJournalEntryRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateJournalEntriesModel {
        io.codat.accounting.models.operations.GetCreateJournalEntriesModelResponse getCreateModel(
            io.codat.accounting.models.operations.GetCreateJournalEntriesModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListJournalEntries {
        io.codat.accounting.models.operations.ListJournalEntriesResponse list(
            io.codat.accounting.models.operations.ListJournalEntriesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateJournal {
        io.codat.accounting.models.operations.CreateJournalResponse create(
            io.codat.accounting.models.operations.CreateJournalRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetJournal {
        io.codat.accounting.models.operations.GetJournalResponse get(
            io.codat.accounting.models.operations.GetJournalRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateJournalsModel {
        io.codat.accounting.models.operations.GetCreateJournalsModelResponse getCreateModel(
            io.codat.accounting.models.operations.GetCreateJournalsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListJournals {
        io.codat.accounting.models.operations.ListJournalsResponse list(
            io.codat.accounting.models.operations.ListJournalsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreatePayment {
        io.codat.accounting.models.operations.CreatePaymentResponse create(
            io.codat.accounting.models.operations.CreatePaymentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetPayment {
        io.codat.accounting.models.operations.GetPaymentResponse get(
            io.codat.accounting.models.operations.GetPaymentRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreatePaymentsModel {
        io.codat.accounting.models.operations.GetCreatePaymentsModelResponse getCreateModel(
            io.codat.accounting.models.operations.GetCreatePaymentsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListPayments {
        io.codat.accounting.models.operations.ListPaymentsResponse list(
            io.codat.accounting.models.operations.ListPaymentsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAgedCreditorsReport {
        io.codat.accounting.models.operations.GetAgedCreditorsReportResponse getAgedCreditorsReport(
            io.codat.accounting.models.operations.GetAgedCreditorsReportRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetAgedDebtorsReport {
        io.codat.accounting.models.operations.GetAgedDebtorsReportResponse getAgedDebtorsReport(
            io.codat.accounting.models.operations.GetAgedDebtorsReportRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetBalanceSheet {
        io.codat.accounting.models.operations.GetBalanceSheetResponse getBalanceSheet(
            io.codat.accounting.models.operations.GetBalanceSheetRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCashFlowStatement {
        io.codat.accounting.models.operations.GetCashFlowStatementResponse getCashFlowStatement(
            io.codat.accounting.models.operations.GetCashFlowStatementRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetProfitAndLoss {
        io.codat.accounting.models.operations.GetProfitAndLossResponse getProfitAndLoss(
            io.codat.accounting.models.operations.GetProfitAndLossRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallIsAgedCreditorsReportAvailable {
        io.codat.accounting.models.operations.IsAgedCreditorsReportAvailableResponse isAgedCreditorsReportAvailable(
            io.codat.accounting.models.operations.IsAgedCreditorsReportAvailableRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallIsAgedDebtorReportAvailable {
        io.codat.accounting.models.operations.IsAgedDebtorReportAvailableResponse isAgedDebtorReportAvailable(
            io.codat.accounting.models.operations.IsAgedDebtorReportAvailableRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCompanyInfo {
        io.codat.accounting.models.operations.GetCompanyInfoResponse get(
            io.codat.accounting.models.operations.GetCompanyInfoRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallRefreshCompanyInfo {
        io.codat.accounting.models.operations.RefreshCompanyInfoResponse refresh(
            io.codat.accounting.models.operations.RefreshCompanyInfoRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetPaymentMethod {
        io.codat.accounting.models.operations.GetPaymentMethodResponse get(
            io.codat.accounting.models.operations.GetPaymentMethodRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListPaymentMethods {
        io.codat.accounting.models.operations.ListPaymentMethodsResponse list(
            io.codat.accounting.models.operations.ListPaymentMethodsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetSalesOrder {
        io.codat.accounting.models.operations.GetSalesOrderResponse get(
            io.codat.accounting.models.operations.GetSalesOrderRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListSalesOrders {
        io.codat.accounting.models.operations.ListSalesOrdersResponse list(
            io.codat.accounting.models.operations.ListSalesOrdersRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetTaxRate {
        io.codat.accounting.models.operations.GetTaxRateResponse get(
            io.codat.accounting.models.operations.GetTaxRateRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListTaxRates {
        io.codat.accounting.models.operations.ListTaxRatesResponse list(
            io.codat.accounting.models.operations.ListTaxRatesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetTrackingCategory {
        io.codat.accounting.models.operations.GetTrackingCategoryResponse get(
            io.codat.accounting.models.operations.GetTrackingCategoryRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListTrackingCategories {
        io.codat.accounting.models.operations.ListTrackingCategoriesResponse list(
            io.codat.accounting.models.operations.ListTrackingCategoriesRequest request,
            Optional<Options> options) throws Exception;
    }

}