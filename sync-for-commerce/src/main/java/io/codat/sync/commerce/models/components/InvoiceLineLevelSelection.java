/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package io.codat.sync.commerce.models.components;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.codat.sync.commerce.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import org.openapitools.jackson.nullable.JsonNullable;


public class InvoiceLineLevelSelection {

    /**
     * Options for grouping on invoice lines.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("groupByOptions")
    private JsonNullable<? extends java.util.List<String>> groupByOptions;

    /**
     * Invoice line level selection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selectedGroupByOptions")
    private JsonNullable<? extends java.util.List<String>> selectedGroupByOptions;

    public InvoiceLineLevelSelection(
            @JsonProperty("groupByOptions") JsonNullable<? extends java.util.List<String>> groupByOptions,
            @JsonProperty("selectedGroupByOptions") JsonNullable<? extends java.util.List<String>> selectedGroupByOptions) {
        Utils.checkNotNull(groupByOptions, "groupByOptions");
        Utils.checkNotNull(selectedGroupByOptions, "selectedGroupByOptions");
        this.groupByOptions = groupByOptions;
        this.selectedGroupByOptions = selectedGroupByOptions;
    }

    /**
     * Options for grouping on invoice lines.
     */
    public JsonNullable<? extends java.util.List<String>> groupByOptions() {
        return groupByOptions;
    }

    /**
     * Invoice line level selection.
     */
    public JsonNullable<? extends java.util.List<String>> selectedGroupByOptions() {
        return selectedGroupByOptions;
    }
    
    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Options for grouping on invoice lines.
     */
    public InvoiceLineLevelSelection withGroupByOptions(java.util.List<String> groupByOptions) {
        Utils.checkNotNull(groupByOptions, "groupByOptions");
        this.groupByOptions = JsonNullable.of(groupByOptions);
        return this;
    }

    /**
     * Options for grouping on invoice lines.
     */
    public InvoiceLineLevelSelection withGroupByOptions(JsonNullable<? extends java.util.List<String>> groupByOptions) {
        Utils.checkNotNull(groupByOptions, "groupByOptions");
        this.groupByOptions = groupByOptions;
        return this;
    }

    /**
     * Invoice line level selection.
     */
    public InvoiceLineLevelSelection withSelectedGroupByOptions(java.util.List<String> selectedGroupByOptions) {
        Utils.checkNotNull(selectedGroupByOptions, "selectedGroupByOptions");
        this.selectedGroupByOptions = JsonNullable.of(selectedGroupByOptions);
        return this;
    }

    /**
     * Invoice line level selection.
     */
    public InvoiceLineLevelSelection withSelectedGroupByOptions(JsonNullable<? extends java.util.List<String>> selectedGroupByOptions) {
        Utils.checkNotNull(selectedGroupByOptions, "selectedGroupByOptions");
        this.selectedGroupByOptions = selectedGroupByOptions;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InvoiceLineLevelSelection other = (InvoiceLineLevelSelection) o;
        return 
            java.util.Objects.deepEquals(this.groupByOptions, other.groupByOptions) &&
            java.util.Objects.deepEquals(this.selectedGroupByOptions, other.selectedGroupByOptions);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            groupByOptions,
            selectedGroupByOptions);
    }
    
    @Override
    public String toString() {
        return Utils.toString(InvoiceLineLevelSelection.class,
                "groupByOptions", groupByOptions,
                "selectedGroupByOptions", selectedGroupByOptions);
    }
    
    public final static class Builder {
 
        private JsonNullable<? extends java.util.List<String>> groupByOptions = JsonNullable.undefined();
 
        private JsonNullable<? extends java.util.List<String>> selectedGroupByOptions = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Options for grouping on invoice lines.
         */
        public Builder groupByOptions(java.util.List<String> groupByOptions) {
            Utils.checkNotNull(groupByOptions, "groupByOptions");
            this.groupByOptions = JsonNullable.of(groupByOptions);
            return this;
        }

        /**
         * Options for grouping on invoice lines.
         */
        public Builder groupByOptions(JsonNullable<? extends java.util.List<String>> groupByOptions) {
            Utils.checkNotNull(groupByOptions, "groupByOptions");
            this.groupByOptions = groupByOptions;
            return this;
        }

        /**
         * Invoice line level selection.
         */
        public Builder selectedGroupByOptions(java.util.List<String> selectedGroupByOptions) {
            Utils.checkNotNull(selectedGroupByOptions, "selectedGroupByOptions");
            this.selectedGroupByOptions = JsonNullable.of(selectedGroupByOptions);
            return this;
        }

        /**
         * Invoice line level selection.
         */
        public Builder selectedGroupByOptions(JsonNullable<? extends java.util.List<String>> selectedGroupByOptions) {
            Utils.checkNotNull(selectedGroupByOptions, "selectedGroupByOptions");
            this.selectedGroupByOptions = selectedGroupByOptions;
            return this;
        }
        
        public InvoiceLineLevelSelection build() {
            return new InvoiceLineLevelSelection(
                groupByOptions,
                selectedGroupByOptions);
        }
    }
}

