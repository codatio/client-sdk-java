/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package io.codat.sync.commerce.models.components;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.codat.sync.commerce.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;


public class InvoiceLevelSelection {

    /**
     * Options for grouping sales.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("groupByOptions")
    private JsonNullable<? extends List<String>> groupByOptions;

    /**
     * Selected array of grouping options.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selectedGroupByOptions")
    private JsonNullable<? extends List<String>> selectedGroupByOptions;

    @JsonCreator
    public InvoiceLevelSelection(
            @JsonProperty("groupByOptions") JsonNullable<? extends List<String>> groupByOptions,
            @JsonProperty("selectedGroupByOptions") JsonNullable<? extends List<String>> selectedGroupByOptions) {
        Utils.checkNotNull(groupByOptions, "groupByOptions");
        Utils.checkNotNull(selectedGroupByOptions, "selectedGroupByOptions");
        this.groupByOptions = groupByOptions;
        this.selectedGroupByOptions = selectedGroupByOptions;
    }
    
    public InvoiceLevelSelection() {
        this(JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Options for grouping sales.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<String>> groupByOptions() {
        return (JsonNullable<List<String>>) groupByOptions;
    }

    /**
     * Selected array of grouping options.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<String>> selectedGroupByOptions() {
        return (JsonNullable<List<String>>) selectedGroupByOptions;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Options for grouping sales.
     */
    public InvoiceLevelSelection withGroupByOptions(List<String> groupByOptions) {
        Utils.checkNotNull(groupByOptions, "groupByOptions");
        this.groupByOptions = JsonNullable.of(groupByOptions);
        return this;
    }

    /**
     * Options for grouping sales.
     */
    public InvoiceLevelSelection withGroupByOptions(JsonNullable<? extends List<String>> groupByOptions) {
        Utils.checkNotNull(groupByOptions, "groupByOptions");
        this.groupByOptions = groupByOptions;
        return this;
    }

    /**
     * Selected array of grouping options.
     */
    public InvoiceLevelSelection withSelectedGroupByOptions(List<String> selectedGroupByOptions) {
        Utils.checkNotNull(selectedGroupByOptions, "selectedGroupByOptions");
        this.selectedGroupByOptions = JsonNullable.of(selectedGroupByOptions);
        return this;
    }

    /**
     * Selected array of grouping options.
     */
    public InvoiceLevelSelection withSelectedGroupByOptions(JsonNullable<? extends List<String>> selectedGroupByOptions) {
        Utils.checkNotNull(selectedGroupByOptions, "selectedGroupByOptions");
        this.selectedGroupByOptions = selectedGroupByOptions;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InvoiceLevelSelection other = (InvoiceLevelSelection) o;
        return 
            Objects.deepEquals(this.groupByOptions, other.groupByOptions) &&
            Objects.deepEquals(this.selectedGroupByOptions, other.selectedGroupByOptions);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            groupByOptions,
            selectedGroupByOptions);
    }
    
    @Override
    public String toString() {
        return Utils.toString(InvoiceLevelSelection.class,
                "groupByOptions", groupByOptions,
                "selectedGroupByOptions", selectedGroupByOptions);
    }
    
    public final static class Builder {
 
        private JsonNullable<? extends List<String>> groupByOptions = JsonNullable.undefined();
 
        private JsonNullable<? extends List<String>> selectedGroupByOptions = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Options for grouping sales.
         */
        public Builder groupByOptions(List<String> groupByOptions) {
            Utils.checkNotNull(groupByOptions, "groupByOptions");
            this.groupByOptions = JsonNullable.of(groupByOptions);
            return this;
        }

        /**
         * Options for grouping sales.
         */
        public Builder groupByOptions(JsonNullable<? extends List<String>> groupByOptions) {
            Utils.checkNotNull(groupByOptions, "groupByOptions");
            this.groupByOptions = groupByOptions;
            return this;
        }

        /**
         * Selected array of grouping options.
         */
        public Builder selectedGroupByOptions(List<String> selectedGroupByOptions) {
            Utils.checkNotNull(selectedGroupByOptions, "selectedGroupByOptions");
            this.selectedGroupByOptions = JsonNullable.of(selectedGroupByOptions);
            return this;
        }

        /**
         * Selected array of grouping options.
         */
        public Builder selectedGroupByOptions(JsonNullable<? extends List<String>> selectedGroupByOptions) {
            Utils.checkNotNull(selectedGroupByOptions, "selectedGroupByOptions");
            this.selectedGroupByOptions = selectedGroupByOptions;
            return this;
        }
        
        public InvoiceLevelSelection build() {
            return new InvoiceLevelSelection(
                groupByOptions,
                selectedGroupByOptions);
        }
    }
}

