/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package io.codat.sync.commerce.models.operations;

import io.codat.sync.commerce.utils.SpeakeasyMetadata;
import io.codat.sync.commerce.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.util.Optional;


public class UpdateConfigTextSyncFlowRequest {

    @SpeakeasyMetadata("request:mediaType=application/json")
    private Optional<? extends java.util.Map<String, io.codat.sync.commerce.models.components.Localization>> requestBody;

    /**
     * Localization identifier for English (US) or French.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=locale")
    private io.codat.sync.commerce.models.components.Locale locale;

    public UpdateConfigTextSyncFlowRequest(
            Optional<? extends java.util.Map<String, io.codat.sync.commerce.models.components.Localization>> requestBody,
            io.codat.sync.commerce.models.components.Locale locale) {
        Utils.checkNotNull(requestBody, "requestBody");
        Utils.checkNotNull(locale, "locale");
        this.requestBody = requestBody;
        this.locale = locale;
    }

    public Optional<? extends java.util.Map<String, io.codat.sync.commerce.models.components.Localization>> requestBody() {
        return requestBody;
    }

    /**
     * Localization identifier for English (US) or French.
     */
    public io.codat.sync.commerce.models.components.Locale locale() {
        return locale;
    }
    
    public final static Builder builder() {
        return new Builder();
    }

    public UpdateConfigTextSyncFlowRequest withRequestBody(java.util.Map<String, io.codat.sync.commerce.models.components.Localization> requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = Optional.ofNullable(requestBody);
        return this;
    }
    
    public UpdateConfigTextSyncFlowRequest withRequestBody(Optional<? extends java.util.Map<String, io.codat.sync.commerce.models.components.Localization>> requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = requestBody;
        return this;
    }

    /**
     * Localization identifier for English (US) or French.
     */
    public UpdateConfigTextSyncFlowRequest withLocale(io.codat.sync.commerce.models.components.Locale locale) {
        Utils.checkNotNull(locale, "locale");
        this.locale = locale;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateConfigTextSyncFlowRequest other = (UpdateConfigTextSyncFlowRequest) o;
        return 
            java.util.Objects.deepEquals(this.requestBody, other.requestBody) &&
            java.util.Objects.deepEquals(this.locale, other.locale);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            requestBody,
            locale);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateConfigTextSyncFlowRequest.class,
                "requestBody", requestBody,
                "locale", locale);
    }
    
    public final static class Builder {
 
        private Optional<? extends java.util.Map<String, io.codat.sync.commerce.models.components.Localization>> requestBody = Optional.empty();
 
        private io.codat.sync.commerce.models.components.Locale locale;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder requestBody(java.util.Map<String, io.codat.sync.commerce.models.components.Localization> requestBody) {
            Utils.checkNotNull(requestBody, "requestBody");
            this.requestBody = Optional.ofNullable(requestBody);
            return this;
        }
        
        public Builder requestBody(Optional<? extends java.util.Map<String, io.codat.sync.commerce.models.components.Localization>> requestBody) {
            Utils.checkNotNull(requestBody, "requestBody");
            this.requestBody = requestBody;
            return this;
        }

        /**
         * Localization identifier for English (US) or French.
         */
        public Builder locale(io.codat.sync.commerce.models.components.Locale locale) {
            Utils.checkNotNull(locale, "locale");
            this.locale = locale;
            return this;
        }
        
        public UpdateConfigTextSyncFlowRequest build() {
            return new UpdateConfigTextSyncFlowRequest(
                requestBody,
                locale);
        }
    }
}

