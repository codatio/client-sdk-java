/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package io.codat.bank_feeds.models.operations;

import io.codat.bank_feeds.models.components.CompanyRequestBody;
import io.codat.bank_feeds.utils.Options;
import java.lang.Exception;
import java.util.Optional;

public class SDKMethodInterfaces {


    public interface MethodCallCreateCompany {
        CreateCompanyResponse create(
            Optional<? extends CompanyRequestBody> request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDeleteCompany {
        DeleteCompanyResponse delete(
            DeleteCompanyRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCompany {
        GetCompanyResponse get(
            GetCompanyRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCompanyAccessToken {
        GetCompanyAccessTokenResponse getAccessToken(
            GetCompanyAccessTokenRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCompanies {
        ListCompaniesResponse list(
            ListCompaniesRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUpdateCompany {
        UpdateCompanyResponse update(
            UpdateCompanyRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateConnection {
        CreateConnectionResponse create(
            CreateConnectionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDeleteConnection {
        DeleteConnectionResponse delete(
            DeleteConnectionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetConnection {
        GetConnectionResponse get(
            GetConnectionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListConnections {
        ListConnectionsResponse list(
            ListConnectionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUnlinkConnection {
        UnlinkConnectionResponse unlink(
            UnlinkConnectionRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateBankAccountMapping {
        CreateBankAccountMappingResponse create(
            CreateBankAccountMappingRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetBankAccountMapping {
        GetBankAccountMappingResponse get(
            GetBankAccountMappingRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCompanyInformation {
        GetCompanyInformationResponse get(
            GetCompanyInformationRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateSourceAccount {
        CreateSourceAccountResponse create(
            CreateSourceAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateBatchSourceAccount {
        CreateBatchSourceAccountResponse createBatch(
            CreateBatchSourceAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDeleteSourceAccount {
        DeleteSourceAccountResponse delete(
            DeleteSourceAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallDeleteBankFeedCredentials {
        DeleteBankFeedCredentialsResponse deleteCredentials(
            DeleteBankFeedCredentialsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGenerateCredentials {
        GenerateCredentialsResponse generateCredentials(
            GenerateCredentialsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListSourceAccounts {
        ListSourceAccountsResponse list(
            ListSourceAccountsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallUpdateSourceAccount {
        UpdateSourceAccountResponse update(
            UpdateSourceAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateBankAccount {
        CreateBankAccountResponse create(
            CreateBankAccountRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateBankAccountsModel {
        GetCreateBankAccountsModelResponse getCreateModel(
            GetCreateBankAccountsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListBankAccounts {
        ListBankAccountsResponse list(
            ListBankAccountsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallCreateBankTransactions {
        CreateBankTransactionsResponse create(
            CreateBankTransactionsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateBankTransactionsModel {
        GetCreateBankTransactionsModelResponse getCreateModel(
            GetCreateBankTransactionsModelRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetCreateOperation {
        GetCreateOperationResponse getCreateOperation(
            GetCreateOperationRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallListCreateOperations {
        ListCreateOperationsResponse listCreateOperations(
            ListCreateOperationsRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetConfiguration {
        GetConfigurationResponse get(
            GetConfigurationRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallSetConfiguration {
        SetConfigurationResponse set(
            SetConfigurationRequest request,
            Optional<Options> options) throws Exception;
    }


    public interface MethodCallGetLastSuccessful {
        GetLastSuccessfulResponse getLastSuccessfulSync(
            GetLastSuccessfulRequest request,
            Optional<Options> options) throws Exception;
    }


}
