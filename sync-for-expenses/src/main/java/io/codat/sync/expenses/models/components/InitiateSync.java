/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package io.codat.sync.expenses.models.components;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.codat.sync.expenses.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import org.openapitools.jackson.nullable.JsonNullable;


public class InitiateSync {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("datasetIds")
    private JsonNullable<? extends java.util.List<String>> datasetIds;

    public InitiateSync(
            @JsonProperty("datasetIds") JsonNullable<? extends java.util.List<String>> datasetIds) {
        Utils.checkNotNull(datasetIds, "datasetIds");
        this.datasetIds = datasetIds;
    }

    public JsonNullable<? extends java.util.List<String>> datasetIds() {
        return datasetIds;
    }
    
    public final static Builder builder() {
        return new Builder();
    }

    public InitiateSync withDatasetIds(java.util.List<String> datasetIds) {
        Utils.checkNotNull(datasetIds, "datasetIds");
        this.datasetIds = JsonNullable.of(datasetIds);
        return this;
    }

    public InitiateSync withDatasetIds(JsonNullable<? extends java.util.List<String>> datasetIds) {
        Utils.checkNotNull(datasetIds, "datasetIds");
        this.datasetIds = datasetIds;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InitiateSync other = (InitiateSync) o;
        return 
            java.util.Objects.deepEquals(this.datasetIds, other.datasetIds);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            datasetIds);
    }
    
    @Override
    public String toString() {
        return Utils.toString(InitiateSync.class,
                "datasetIds", datasetIds);
    }
    
    public final static class Builder {
 
        private JsonNullable<? extends java.util.List<String>> datasetIds = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder datasetIds(java.util.List<String> datasetIds) {
            Utils.checkNotNull(datasetIds, "datasetIds");
            this.datasetIds = JsonNullable.of(datasetIds);
            return this;
        }

        public Builder datasetIds(JsonNullable<? extends java.util.List<String>> datasetIds) {
            Utils.checkNotNull(datasetIds, "datasetIds");
            this.datasetIds = datasetIds;
            return this;
        }
        
        public InitiateSync build() {
            return new InitiateSync(
                datasetIds);
        }
    }
}

