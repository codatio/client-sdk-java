/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package io.codat.platform.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import io.codat.platform.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.openapitools.jackson.nullable.JsonNullable;


public class PushValidationInfo {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("information")
    private JsonNullable<? extends java.util.List<PushFieldValidation>> information;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warnings")
    private JsonNullable<? extends java.util.List<PushFieldValidation>> warnings;

    @JsonCreator
    public PushValidationInfo(
            @JsonProperty("information") JsonNullable<? extends java.util.List<PushFieldValidation>> information,
            @JsonProperty("warnings") JsonNullable<? extends java.util.List<PushFieldValidation>> warnings) {
        Utils.checkNotNull(information, "information");
        Utils.checkNotNull(warnings, "warnings");
        this.information = information;
        this.warnings = warnings;
    }
    
    public PushValidationInfo() {
        this(JsonNullable.undefined(), JsonNullable.undefined());
    }

    @JsonIgnore
    public JsonNullable<? extends java.util.List<PushFieldValidation>> information() {
        return information;
    }

    @JsonIgnore
    public JsonNullable<? extends java.util.List<PushFieldValidation>> warnings() {
        return warnings;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PushValidationInfo withInformation(java.util.List<PushFieldValidation> information) {
        Utils.checkNotNull(information, "information");
        this.information = JsonNullable.of(information);
        return this;
    }

    public PushValidationInfo withInformation(JsonNullable<? extends java.util.List<PushFieldValidation>> information) {
        Utils.checkNotNull(information, "information");
        this.information = information;
        return this;
    }

    public PushValidationInfo withWarnings(java.util.List<PushFieldValidation> warnings) {
        Utils.checkNotNull(warnings, "warnings");
        this.warnings = JsonNullable.of(warnings);
        return this;
    }

    public PushValidationInfo withWarnings(JsonNullable<? extends java.util.List<PushFieldValidation>> warnings) {
        Utils.checkNotNull(warnings, "warnings");
        this.warnings = warnings;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PushValidationInfo other = (PushValidationInfo) o;
        return 
            java.util.Objects.deepEquals(this.information, other.information) &&
            java.util.Objects.deepEquals(this.warnings, other.warnings);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            information,
            warnings);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PushValidationInfo.class,
                "information", information,
                "warnings", warnings);
    }
    
    public final static class Builder {
 
        private JsonNullable<? extends java.util.List<PushFieldValidation>> information = JsonNullable.undefined();
 
        private JsonNullable<? extends java.util.List<PushFieldValidation>> warnings = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder information(java.util.List<PushFieldValidation> information) {
            Utils.checkNotNull(information, "information");
            this.information = JsonNullable.of(information);
            return this;
        }

        public Builder information(JsonNullable<? extends java.util.List<PushFieldValidation>> information) {
            Utils.checkNotNull(information, "information");
            this.information = information;
            return this;
        }

        public Builder warnings(java.util.List<PushFieldValidation> warnings) {
            Utils.checkNotNull(warnings, "warnings");
            this.warnings = JsonNullable.of(warnings);
            return this;
        }

        public Builder warnings(JsonNullable<? extends java.util.List<PushFieldValidation>> warnings) {
            Utils.checkNotNull(warnings, "warnings");
            this.warnings = warnings;
            return this;
        }
        
        public PushValidationInfo build() {
            return new PushValidationInfo(
                information,
                warnings);
        }
    }
}

