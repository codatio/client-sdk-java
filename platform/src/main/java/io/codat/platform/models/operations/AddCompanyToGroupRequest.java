/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package io.codat.platform.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import io.codat.platform.utils.SpeakeasyMetadata;
import io.codat.platform.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class AddCompanyToGroupRequest {

    @SpeakeasyMetadata("request:mediaType=application/json")
    private Optional<? extends io.codat.platform.models.shared.CompanyGroupAssignment> companyGroupAssignment;

    /**
     * Unique identifier for a company.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=companyId")
    private String companyId;

    @JsonCreator
    public AddCompanyToGroupRequest(
            Optional<? extends io.codat.platform.models.shared.CompanyGroupAssignment> companyGroupAssignment,
            String companyId) {
        Utils.checkNotNull(companyGroupAssignment, "companyGroupAssignment");
        Utils.checkNotNull(companyId, "companyId");
        this.companyGroupAssignment = companyGroupAssignment;
        this.companyId = companyId;
    }
    
    public AddCompanyToGroupRequest(
            String companyId) {
        this(Optional.empty(), companyId);
    }

    @JsonIgnore
    public Optional<? extends io.codat.platform.models.shared.CompanyGroupAssignment> companyGroupAssignment() {
        return companyGroupAssignment;
    }

    /**
     * Unique identifier for a company.
     */
    @JsonIgnore
    public String companyId() {
        return companyId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public AddCompanyToGroupRequest withCompanyGroupAssignment(io.codat.platform.models.shared.CompanyGroupAssignment companyGroupAssignment) {
        Utils.checkNotNull(companyGroupAssignment, "companyGroupAssignment");
        this.companyGroupAssignment = Optional.ofNullable(companyGroupAssignment);
        return this;
    }

    public AddCompanyToGroupRequest withCompanyGroupAssignment(Optional<? extends io.codat.platform.models.shared.CompanyGroupAssignment> companyGroupAssignment) {
        Utils.checkNotNull(companyGroupAssignment, "companyGroupAssignment");
        this.companyGroupAssignment = companyGroupAssignment;
        return this;
    }

    /**
     * Unique identifier for a company.
     */
    public AddCompanyToGroupRequest withCompanyId(String companyId) {
        Utils.checkNotNull(companyId, "companyId");
        this.companyId = companyId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AddCompanyToGroupRequest other = (AddCompanyToGroupRequest) o;
        return 
            java.util.Objects.deepEquals(this.companyGroupAssignment, other.companyGroupAssignment) &&
            java.util.Objects.deepEquals(this.companyId, other.companyId);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            companyGroupAssignment,
            companyId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AddCompanyToGroupRequest.class,
                "companyGroupAssignment", companyGroupAssignment,
                "companyId", companyId);
    }
    
    public final static class Builder {
 
        private Optional<? extends io.codat.platform.models.shared.CompanyGroupAssignment> companyGroupAssignment = Optional.empty();
 
        private String companyId;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder companyGroupAssignment(io.codat.platform.models.shared.CompanyGroupAssignment companyGroupAssignment) {
            Utils.checkNotNull(companyGroupAssignment, "companyGroupAssignment");
            this.companyGroupAssignment = Optional.ofNullable(companyGroupAssignment);
            return this;
        }

        public Builder companyGroupAssignment(Optional<? extends io.codat.platform.models.shared.CompanyGroupAssignment> companyGroupAssignment) {
            Utils.checkNotNull(companyGroupAssignment, "companyGroupAssignment");
            this.companyGroupAssignment = companyGroupAssignment;
            return this;
        }

        /**
         * Unique identifier for a company.
         */
        public Builder companyId(String companyId) {
            Utils.checkNotNull(companyId, "companyId");
            this.companyId = companyId;
            return this;
        }
        
        public AddCompanyToGroupRequest build() {
            return new AddCompanyToGroupRequest(
                companyGroupAssignment,
                companyId);
        }
    }
}

