/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package io.codat.platform.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import io.codat.platform.utils.SpeakeasyMetadata;
import io.codat.platform.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class GetIntegrationsBrandingRequest {

    /**
     * A unique 4-letter key to represent a platform in each integration.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=platformKey")
    private String platformKey;

    @JsonCreator
    public GetIntegrationsBrandingRequest(
            String platformKey) {
        Utils.checkNotNull(platformKey, "platformKey");
        this.platformKey = platformKey;
    }

    /**
     * A unique 4-letter key to represent a platform in each integration.
     */
    @JsonIgnore
    public String platformKey() {
        return platformKey;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * A unique 4-letter key to represent a platform in each integration.
     */
    public GetIntegrationsBrandingRequest withPlatformKey(String platformKey) {
        Utils.checkNotNull(platformKey, "platformKey");
        this.platformKey = platformKey;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetIntegrationsBrandingRequest other = (GetIntegrationsBrandingRequest) o;
        return 
            Objects.deepEquals(this.platformKey, other.platformKey);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            platformKey);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetIntegrationsBrandingRequest.class,
                "platformKey", platformKey);
    }
    
    public final static class Builder {
 
        private String platformKey;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * A unique 4-letter key to represent a platform in each integration.
         */
        public Builder platformKey(String platformKey) {
            Utils.checkNotNull(platformKey, "platformKey");
            this.platformKey = platformKey;
            return this;
        }
        
        public GetIntegrationsBrandingRequest build() {
            return new GetIntegrationsBrandingRequest(
                platformKey);
        }
    }
}

