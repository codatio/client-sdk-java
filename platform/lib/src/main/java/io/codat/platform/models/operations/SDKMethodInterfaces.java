/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package io.codat.platform.models.operations;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class SDKMethodInterfaces {

    public interface MethodCallCreateApiKey { 
        io.codat.platform.models.operations.CreateApiKeyResponse createApiKey(
            Optional<? extends io.codat.platform.models.shared.CreateApiKey> request) throws Exception;
    }


    public interface MethodCallDeleteApiKey { 
        io.codat.platform.models.operations.DeleteApiKeyResponse deleteApiKey(
            io.codat.platform.models.operations.DeleteApiKeyRequest request) throws Exception;
    }


    public interface MethodCallGetProfile { 
        io.codat.platform.models.operations.GetProfileResponse getProfileDirect() throws Exception;
    }


    public interface MethodCallGetProfileSyncSettings { 
        io.codat.platform.models.operations.GetProfileSyncSettingsResponse getSyncSettingsDirect() throws Exception;
    }


    public interface MethodCallListApiKeys { 
        io.codat.platform.models.operations.ListApiKeysResponse listApiKeysDirect() throws Exception;
    }


    public interface MethodCallUpdateProfile { 
        io.codat.platform.models.operations.UpdateProfileResponse updateProfile(
            Optional<? extends io.codat.platform.models.shared.Profile> request) throws Exception;
    }


    public interface MethodCallUpdateProfileSyncSettings { 
        io.codat.platform.models.operations.UpdateProfileSyncSettingsResponse updateSyncSettings(
            Optional<? extends io.codat.platform.models.operations.UpdateProfileSyncSettingsRequestBody> request) throws Exception;
    }


    public interface MethodCallCreateCompany { 
        io.codat.platform.models.operations.CreateCompanyResponse create(
            Optional<? extends io.codat.platform.models.shared.CompanyRequestBody> request) throws Exception;
    }


    public interface MethodCallDeleteCompany { 
        io.codat.platform.models.operations.DeleteCompanyResponse delete(
            io.codat.platform.models.operations.DeleteCompanyRequest request) throws Exception;
    }


    public interface MethodCallGetCompany { 
        io.codat.platform.models.operations.GetCompanyResponse get(
            io.codat.platform.models.operations.GetCompanyRequest request) throws Exception;
    }


    public interface MethodCallListCompanies { 
        io.codat.platform.models.operations.ListCompaniesResponse list(
            io.codat.platform.models.operations.ListCompaniesRequest request) throws Exception;
    }


    public interface MethodCallUpdateCompany { 
        io.codat.platform.models.operations.UpdateCompanyResponse update(
            io.codat.platform.models.operations.UpdateCompanyRequest request) throws Exception;
    }


    public interface MethodCallCreateConnection { 
        io.codat.platform.models.operations.CreateConnectionResponse create(
            io.codat.platform.models.operations.CreateConnectionRequest request) throws Exception;
    }


    public interface MethodCallDeleteConnection { 
        io.codat.platform.models.operations.DeleteConnectionResponse delete(
            io.codat.platform.models.operations.DeleteConnectionRequest request) throws Exception;
    }


    public interface MethodCallGetConnection { 
        io.codat.platform.models.operations.GetConnectionResponse get(
            io.codat.platform.models.operations.GetConnectionRequest request) throws Exception;
    }


    public interface MethodCallListConnections { 
        io.codat.platform.models.operations.ListConnectionsResponse list(
            io.codat.platform.models.operations.ListConnectionsRequest request) throws Exception;
    }


    public interface MethodCallUnlinkConnection { 
        io.codat.platform.models.operations.UnlinkConnectionResponse unlink(
            io.codat.platform.models.operations.UnlinkConnectionRequest request) throws Exception;
    }


    public interface MethodCallUpdateConnectionAuthorization { 
        io.codat.platform.models.operations.UpdateConnectionAuthorizationResponse updateAuthorization(
            io.codat.platform.models.operations.UpdateConnectionAuthorizationRequest request) throws Exception;
    }


    public interface MethodCallConfigureCustomDataType { 
        io.codat.platform.models.operations.ConfigureCustomDataTypeResponse configure(
            io.codat.platform.models.operations.ConfigureCustomDataTypeRequest request) throws Exception;
    }


    public interface MethodCallGetCustomDataTypeConfiguration { 
        io.codat.platform.models.operations.GetCustomDataTypeConfigurationResponse getConfiguration(
            io.codat.platform.models.operations.GetCustomDataTypeConfigurationRequest request) throws Exception;
    }


    public interface MethodCallListCustomDataTypeRecords { 
        io.codat.platform.models.operations.ListCustomDataTypeRecordsResponse list(
            io.codat.platform.models.operations.ListCustomDataTypeRecordsRequest request) throws Exception;
    }


    public interface MethodCallRefreshCustomDataType { 
        io.codat.platform.models.operations.RefreshCustomDataTypeResponse refresh(
            io.codat.platform.models.operations.RefreshCustomDataTypeRequest request) throws Exception;
    }


    public interface MethodCallGetCreateUpdateModelOptionsByDataType { 
        io.codat.platform.models.operations.GetCreateUpdateModelOptionsByDataTypeResponse getModelOptions(
            io.codat.platform.models.operations.GetCreateUpdateModelOptionsByDataTypeRequest request) throws Exception;
    }


    public interface MethodCallGetPushOperation { 
        io.codat.platform.models.operations.GetPushOperationResponse getOperation(
            io.codat.platform.models.operations.GetPushOperationRequest request) throws Exception;
    }


    public interface MethodCallGetCompanyPushHistory { 
        io.codat.platform.models.operations.GetCompanyPushHistoryResponse listOperations(
            io.codat.platform.models.operations.GetCompanyPushHistoryRequest request) throws Exception;
    }


    public interface MethodCallRefreshCompanyData { 
        io.codat.platform.models.operations.RefreshCompanyDataResponse all(
            io.codat.platform.models.operations.RefreshCompanyDataRequest request) throws Exception;
    }


    public interface MethodCallRefreshDataType { 
        io.codat.platform.models.operations.RefreshDataTypeResponse byDataType(
            io.codat.platform.models.operations.RefreshDataTypeRequest request) throws Exception;
    }


    public interface MethodCallGetCompanyDataStatus { 
        io.codat.platform.models.operations.GetCompanyDataStatusResponse get(
            io.codat.platform.models.operations.GetCompanyDataStatusRequest request) throws Exception;
    }


    public interface MethodCallGetPullOperation { 
        io.codat.platform.models.operations.GetPullOperationResponse getPullOperation(
            io.codat.platform.models.operations.GetPullOperationRequest request) throws Exception;
    }


    public interface MethodCallListPullOperations { 
        io.codat.platform.models.operations.ListPullOperationsResponse listPullOperations(
            io.codat.platform.models.operations.ListPullOperationsRequest request) throws Exception;
    }


    public interface MethodCallAddCompanyToGroup { 
        io.codat.platform.models.operations.AddCompanyToGroupResponse addCompany(
            io.codat.platform.models.operations.AddCompanyToGroupRequest request) throws Exception;
    }


    public interface MethodCallCreateGroup { 
        io.codat.platform.models.operations.CreateGroupResponse create(
            Optional<? extends io.codat.platform.models.shared.GroupPrototype> request) throws Exception;
    }


    public interface MethodCallListGroups { 
        io.codat.platform.models.operations.ListGroupsResponse listDirect() throws Exception;
    }


    public interface MethodCallRemoveCompanyFromGroup { 
        io.codat.platform.models.operations.RemoveCompanyFromGroupResponse removeCompany(
            io.codat.platform.models.operations.RemoveCompanyFromGroupRequest request) throws Exception;
    }


    public interface MethodCallGetIntegration { 
        io.codat.platform.models.operations.GetIntegrationResponse get(
            io.codat.platform.models.operations.GetIntegrationRequest request) throws Exception;
    }


    public interface MethodCallGetIntegrationsBranding { 
        io.codat.platform.models.operations.GetIntegrationsBrandingResponse getBranding(
            io.codat.platform.models.operations.GetIntegrationsBrandingRequest request) throws Exception;
    }


    public interface MethodCallListIntegrations { 
        io.codat.platform.models.operations.ListIntegrationsResponse list(
            io.codat.platform.models.operations.ListIntegrationsRequest request) throws Exception;
    }


    public interface MethodCallConfigureSupplementalData { 
        io.codat.platform.models.operations.ConfigureSupplementalDataResponse configure(
            io.codat.platform.models.operations.ConfigureSupplementalDataRequest request) throws Exception;
    }


    public interface MethodCallGetSupplementalDataConfiguration { 
        io.codat.platform.models.operations.GetSupplementalDataConfigurationResponse getConfiguration(
            io.codat.platform.models.operations.GetSupplementalDataConfigurationRequest request) throws Exception;
    }


    public interface MethodCallCreateRule { 
        io.codat.platform.models.operations.CreateRuleResponse create(
            Optional<? extends io.codat.platform.models.shared.CreateRule> request) throws Exception;
    }


    public interface MethodCallGetWebhook { 
        io.codat.platform.models.operations.GetWebhookResponse get(
            io.codat.platform.models.operations.GetWebhookRequest request) throws Exception;
    }


    public interface MethodCallListRules { 
        io.codat.platform.models.operations.ListRulesResponse list(
            io.codat.platform.models.operations.ListRulesRequest request) throws Exception;
    }

}